Description: fix BrowseAllow option fails open
Bug: https://bugs.linuxfoundation.org/show_bug.cgi?id=1204
Origin: upstream, http://bzr.linuxfoundation.org/loggerhead/openprinting/cups-filters/revision/7195
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/cups-filters/+bug/1316229

Index: cups-filters-1.0.52/utils/cups-browsed.c
===================================================================
--- cups-filters-1.0.52.orig/utils/cups-browsed.c	2014-05-05 13:01:59.372554602 -0400
+++ cups-filters-1.0.52/utils/cups-browsed.c	2014-05-05 13:02:37.964555227 -0400
@@ -95,7 +95,8 @@
 /* Data structure for browse allow/deny rules */
 typedef enum allow_type_e {
   ALLOW_IP,
-  ALLOW_NET
+  ALLOW_NET,
+  ALLOW_INVALID
 } allow_type_t;
 typedef struct allow_s {
   allow_type_t type;
@@ -1629,6 +1630,9 @@
        allow;
        allow = cupsArrayNext (browseallow)) {
     switch (allow->type) {
+    case ALLOW_INVALID:
+      break;
+
     case ALLOW_IP:
       switch (srcaddr->sa_family) {
       case AF_INET:
@@ -2472,6 +2476,8 @@
   char *p;
   struct in_addr addr;
   allow_t *allow = calloc (1, sizeof (allow_t));
+  if (value == NULL)
+    goto fail;
   p = strchr (value, '/');
   if (p) {
     char *s = strdup (value);
@@ -2514,7 +2520,8 @@
   return 0;
 
 fail:
-  free (allow);
+  allow->type = ALLOW_INVALID;
+  cupsArrayAdd (browseallow, allow);
   return 1;
 }
 
@@ -2618,7 +2625,7 @@
 	  BrowsePoll[NumBrowsePoll++] = b;
 	}
       }
-    } else if (!strcasecmp(line, "BrowseAllow") && value) {
+    } else if (!strcasecmp(line, "BrowseAllow")) {
       if (read_browseallow_value (value))
 	debug_printf ("cups-browsed: BrowseAllow value \"%s\" not understood\n",
 		      value);
